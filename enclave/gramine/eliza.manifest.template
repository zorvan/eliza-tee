# --------------------------------
#             LIBOS
# --------------------------------

libos.entrypoint = "{{ self_exe }}"
libos.check_invalid_pointers = true

# --------------------------------
#             LOADER
# --------------------------------

loader.entrypoint.uri = "file:{{ enclave_dir }}/trusted/gramine/libsysdb.so"
loader.insecure__use_cmdline_argv = true
loader.log_level = "{{ log_level }}"

loader.env.LD_LIBRARY_PATH = "/lib:/lib/x86_64-linux-gnu"
loader.env.MALLOC_ARENA_MAX = "1"

loader.env.PATH = "/usr/local/share/pnpm/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/"
loader.env.HOME = "/"

loader.env.PNPM_HOME="/usr/local/share/pnpm/"

loader.env.SERVER_PORT="{{ server_port }}"
loader.env.ELEVENLABS_VOICE_ID="{{ elevenlabs_voice_id }}"
loader.env.ELEVENLABS_MODEL_ID="{{ elevenlabs_model_id }}"
loader.env.ELEVENLABS_OUTPUT_FORMAT="{{ elevenlabs_output_format }}"
loader.env.ELEVENLABS_XI_API_KEY="{{ elevenlabs_xi_api_key }}"
loader.env.ELEVENLABS_VOICE_STYLE="{{ elevenlabs_voice_style }}"
loader.env.ELEVENLABS_OPTIMIZE_STREAMING_LATENCY="{{ elevenlabs_optimize_streaming_latency }}"
loader.env.ELEVENLABS_VOICE_STABILITY="{{ elevenlabs_voice_stability }}"
loader.env.ELEVENLABS_VOICE_USE_SPEAKER_BOOST="{{ elevenlabs_voice_use_speaker_boost }}"
loader.env.TWITTER_DRY_RUN="{{ twitter_dry_run }}"
loader.env.TWITTER_EMAIL="{{ twitter_email }}"
loader.env.TWITTER_USERNAME="{{ twitter_username }}"
loader.env.TWITTER_PASSWORD="{{ twitter_password }}"
loader.env.OPENAI_API_KEY="{{ openai_api_key }}"
loader.env.X_SERVER_URL="{{ x_server_url }}"
loader.env.WALLET_SECRET_SALT="{{ wallet_secret_salt }}"
loader.env.HELIUS_API_KEY="{{ helius_api_key }}"
loader.env.REDPILL_API_KEY="{{ redpill_api_key }}"
loader.env.BIRDEYE_API_KEY="{{ birdeye_api_key }}"
loader.env.RPC_URL="{{ rpc_url }}"
loader.env.ELEVENLABS_VOICE_SIMILARITY_BOOST="{{ elevenlabs_voice_similarity_boost }}"
loader.env.SOL_ADDRESS="{{ sol_address }}"
loader.env.SLIPPAGE="{{ slippage }}"

# --------------------------------
#             SYS
# --------------------------------

sys.stack.size = "8M"
# sys.brk.max_size = "1M"
sys.insecure__allow_eventfd = true
sys.enable_extra_runtime_domain_names_conf = true
sys.disallow_subprocesses = false

# --------------------------------
#             SGX
# --------------------------------

sgx.trusted_files = [
 
]

sgx.enclave_size = "32G"
sgx.max_threads = 32

sgx.isvprodid = 22
sgx.isvsvn    = 212

sgx.remote_attestation = "dcap"

sgx.debug = false
sgx.file_check_policy = "allow_all_but_log" #"strict"

# sgx.insecure__rpc_thread_num = 24
# sgx.require_avx    = false
# sgx.require_avx512 = false
# sgx.require_mpx    = false
# sgx.require_pkru   = false
# sgx.require_amx    = false

sgx.edmm_enable = false
sgx.preheat_enclave = false

# EDMM Enabled
sgx.use_exinfo = false

# EDMM Disabled
sgx.insecure__allow_memfaults_without_exinfo = true

sgx.allowed_files = [
 # "file:/etc/nsswitch.conf",
 # "file:/etc/localtime",
 # "file:/etc/hosts",
 # "file:/etc/passwd",
 
 # For Bash
 "file:/usr/bin/",
 
 "file:{{ self_exe }}",
 "file:/usr/local/share/pnpm/",
 "file:{{ enclave_dir }}/trusted/",
 "file:{{ enclave_dir }}/package.json",
 "file:{{ enclave_dir }}/pnpm-workspace.yaml",
 "file:{{ enclave_dir }}/.npmrc",
 "file:{{ enclave_dir }}/turbo.json",
 "file:{{ enclave_dir }}/node_modules/",
 "file:{{ enclave_dir }}/agent/",
 "file:{{ enclave_dir }}/packages/",
 "file:{{ enclave_dir }}/scripts/",
 "file:{{ enclave_dir }}/characters/",
]

# --------------------------------
#             FS
# --------------------------------

fs.start_dir = "/eliza"

fs.mounts = [
  { path = "/lib", uri = "file:{{ enclave_dir }}/trusted/gramine/runtime/glibc" },
  { path = "/lib/x86_64-linux-gnu", uri = "file:{{ enclave_dir }}/trusted/arch_libdir" },
  { path = "/etc", uri = "file:{{ enclave_dir }}/trusted/etc" },

  # TMPFS
  { path = "/tmp", type = "tmpfs" },

  # Bash
  { path = "/usr/bin/" , uri = "file:/usr/bin/", type = "chroot"},
  
  # PNPM & NODE
  { path = "/usr/local/share/pnpm/" , uri = "file:/usr/local/share/pnpm/", type = "chroot"},
  
  # ELIZA
  { path = "/eliza/package.json" , uri = "file:{{ enclave_dir }}/package.json", type = "chroot"},
  { path = "/eliza//pnpm-workspace.yaml" , uri = "file:{{ enclave_dir }}/pnpm-workspace.yaml", type = "chroot"},
  { path = "/eliza//.npmrc" , uri = "file:{{ enclave_dir }}/.npmrc", type = "chroot"},
  { path = "/eliza//turbo.json" , uri = "file:{{ enclave_dir }}/turbo.json", type = "chroot"},
  { path = "/eliza//agent/" , uri = "file:{{ enclave_dir }}/agent/", type = "chroot"},
  { path = "/eliza//packages/" , uri = "file:{{ enclave_dir }}/packages/", type = "chroot"},
  { path = "/eliza//scripts/" , uri = "file:{{ enclave_dir }}/scripts/", type = "chroot"},
  { path = "/eliza//characters/" , uri = "file:{{ enclave_dir }}/characters/", type = "chroot"},
  { path = "/eliza//node_modules/" , uri = "file:{{ enclave_dir }}/node_modules/", type = "chroot"},

  # SEALED
  { path = "/eliza//data" , uri = "file:{{ enclave_dir }}/../../data/", type = "encrypted", key_name = "_sgx_mrenclave"},
  { path = "/eliza//db.sqlite" , uri = "file:{{ enclave_dir }}/../../db.sqlite", type = "encrypted", key_name = "_sgx_mrenclave"},
  # TODO: ADD all the Cache folders (tweetcache) to the seal path
]